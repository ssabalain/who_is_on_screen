version: '3.7'

x-common:
  &common
  image: airflow-spark:airflow-2.3.0-spark-3.2.0
  user: "${AIRFLOW_UID}:0"
  networks:
    - default_net
  env_file:
    - .env
  volumes:
    - ./docker/airflow/config/airflow.cfg:/opt/airflow/airflow.cfg
    - ./airflow/dags:/opt/airflow/dags #DAG folder
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./spark/scripts:/usr/local/spark/app #Spark Scripts (Must be the same path in airflow and Spark Cluster)
    - ./spark/resources:/usr/local/spark/resources #Resources folder (Must be the same path in airflow and Spark Cluster)
    - shared-workspace:/opt/workspace/src #(Must be the same path in airflow and Spark Cluster)
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  docs:
    container_name: docs
    networks:
      - default_net
    image: nginx
    ports:
      - "80:80"
    volumes:
      - "./nginx/html:/usr/share/nginx/html:ro"

  mysql:
    container_name: mysql
    restart: always
    networks:
      - default_net
    image: mysql/mysql-server:latest
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: Whoisonscreen_Root!
      MYSQL_USER: WIOS_User
      MYSQL_PASSWORD: Whoisonscreen!
      MYSQL_DATABASE: facial_db
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysql-data:/var/lib/mysql

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:5.0.1
    networks:
      - default_net
    restart: always
    environment:
      PMA_HOST: mysql
      PMA_USER: WIOS_User
      PMA_PASSWORD: Whoisonscreen!
    ports:
      - "8078:80"

  postgres:
    image: postgres:13
    container_name: airflow-postgres
    networks:
      - default_net
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8079:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8079/health"]
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 5
  
  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  jupyterlab:
    image: jupyterlab:3.0.0-spark-3.2.0
    container_name: jupyterlab
    networks:
      - default_net
    ports:
      - 8888:8888
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace/src

  spark-master:
    image: spark-master:3.2.0
    container_name: spark-master
    networks:
      - default_net
    environment:
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - shared-workspace:/opt/workspace/src

  spark-worker-1:
    image: spark-worker:3.2.0
    container_name: spark-worker-1
    networks:
      - default_net
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - 8081:8081
    volumes:
      - shared-workspace:/opt/workspace/src
    depends_on:
      - spark-master

  spark-worker-2:
    image: spark-worker:3.2.0
    container_name: spark-worker-2
    networks:
      - default_net
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - 8082:8081
    volumes:
      - shared-workspace:/opt/workspace/src
    depends_on:
      - spark-master

  chrome:
    image: seleniarm/standalone-chromium:latest
    container_name: chrome
    hostname: chrome
    networks:
      - default_net
    ports:
      - "5900:5900"
      - "4444:4444"
    privileged: true
    shm_size: 2g
    volumes:
      - shared-workspace:/usr/local/src

  redis:
    container_name: redis
    image: redis:6.2-alpine
    networks:
      - default_net
    restart: always
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    volumes:
      - ./src/redis_data:/data

volumes:
  postgres-db-volume:
  mysql-data:
  shared-workspace:
    name: "hadoop-distributed-file-system"
    driver_opts:
      type: none
      device: ./src/
      o: bind

networks:
    default_net: